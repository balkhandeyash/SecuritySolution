[{"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/index.js":"1","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/App.js":"2","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/ProtectedRoute.js":"3","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Login.js":"4","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Dashboard.js":"5","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Register.js":"6","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/LandingPage.js":"7","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Footer.js":"8","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Header.js":"9","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/DashboardHeader.js":"10","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/JobDetailsCard.js":"11","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Profile.js":"12"},{"size":254,"mtime":1697307109349,"results":"13","hashOfConfig":"14"},{"size":2655,"mtime":1703904382990,"results":"15","hashOfConfig":"14"},{"size":389,"mtime":1697994025781,"results":"16","hashOfConfig":"14"},{"size":6276,"mtime":1702654361099,"results":"17","hashOfConfig":"14"},{"size":3217,"mtime":1704913506783,"results":"18","hashOfConfig":"14"},{"size":5327,"mtime":1702654472894,"results":"19","hashOfConfig":"14"},{"size":1450,"mtime":1703868658620,"results":"20","hashOfConfig":"14"},{"size":157,"mtime":1702654098688,"results":"21","hashOfConfig":"14"},{"size":520,"mtime":1702655913842,"results":"22","hashOfConfig":"14"},{"size":1704,"mtime":1703871144590,"results":"23","hashOfConfig":"14"},{"size":531,"mtime":1703874506606,"results":"24","hashOfConfig":"14"},{"size":3632,"mtime":1703905706526,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1qynqi6",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/index.js",[],[],["65"],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/App.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/ProtectedRoute.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Login.js",["66","67","68"],[],"import React, { useState } from \"react\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport Register from \"./Register\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nimport axios from \"axios\"; // Import axios here\n\nconst Login = ({ setToken }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [captchaValue, setCaptchaValue] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSendOTP = async () => {\n    try {\n      // Check if username is provided\n      if (!username) {\n        alert(\"Please enter your username.\");\n        return;\n      }\n\n      // Send a request to the server to initiate OTP sending\n      const response = await axios.post(\n        \"http://127.0.0.1:5001/login-otp\",\n        { username },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Check if the server successfully initiated OTP sending\n      if (response.status === 200) {\n        // Assuming the server sends a response like { email: \"user@example.com\" }\n        const email = response.data.email;\n\n        // Generate and send OTP to the provided email\n        const otpResponse = await axios.post(\n          \"http://127.0.0.1:5001/send-otp\",\n          { email },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Check if OTP sending was successful\n        if (otpResponse.status === 200) {\n          alert(\"OTP sent successfully. Check your email.\");\n          setOtpSent(true);\n        } else {\n          alert(\"Failed to send OTP. Please try again.\");\n        }\n      } else {\n        alert(\"You don't have any registered email for this username.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n      alert(\"Error sending OTP. Please try again later.\");\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      // Validate email and OTP if OTP has been sent\n      if (otpSent && (!username || !otp || !captchaValue)) {\n        alert(\n          \"Please enter your username, OTP, and complete the reCAPTCHA verification.\"\n        );\n        return;\n      }\n      const response = await axios.post(\n        \"http://127.0.0.1:5001/login\",\n        {\n          username,\n          password,\n          captchaValue,\n          otp,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Check if reCAPTCHA is verified\n      if (!captchaValue) {\n        alert(\"Please complete the reCAPTCHA verification.\");\n        return;\n      }\n\n      if (response.status === 200) {\n        console.log(\"login Success\");\n        localStorage.setItem(\"token\", response.data.token);\n        setToken(response.data.token);\n        //console.log(response.data.token);\n        navigate(\"/dashboard\");\n      } else if (response.status === 401) {\n        // Invalid credentials, show error message\n        console.error(\"Invalid credentials\");\n        alert(\"Invalid credentials. Please try again.\");\n      } else {\n        // Other errors, show a generic error message\n        console.error(\"Login failed:\", response.statusText);\n        alert(\"Login failed. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      console.log(error.response.data);\n      alert(\"Error during login\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login-body\">\n        <div className=\"login-container\">\n          <div className=\"login-header\">\n            <h2>Login</h2>\n          </div>\n          <form className=\"login-form\" onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password:</label>\n              <div className=\"password-input\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n                <i\n                  className={`fas ${\n                    showPassword ? \"fa-eye-slash\" : \"fa-eye\"\n                  } password-toggle-icon`}\n                  onClick={() => setShowPassword(!showPassword)}\n                ></i>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              {/* Google reCAPTCHA */}\n              <ReCAPTCHA\n                sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n                onChange={(value) => setCaptchaValue(value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              {/* Button to send OTP */}\n              <button type=\"button\" onClick={handleSendOTP}>\n                Send OTP\n              </button>\n            </div>\n            {/* Display OTP input field only if OTP has been sent */}\n            {otpSent && (\n              <div className=\"form-group\">\n                <label htmlFor=\"otp\">Enter OTP:</label>\n                <input\n                  type=\"text\"\n                  id=\"otp\"\n                  name=\"otp\"\n                  value={otp}\n                  onChange={(e) => setOtp(e.target.value)}\n                  required\n                />\n              </div>\n            )}\n            <button type=\"submit\" className=\"login-button\">\n              Login\n            </button>\n          </form>\n          <p>\n            Don't have an account? <Link to=\"/register\">Register here</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Dashboard.js",["69"],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Register.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/LandingPage.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Footer.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Header.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/DashboardHeader.js",["70"],[],"// DashboardHeader.js\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RiMenu4Line, RiNotification2Line } from \"react-icons/ri\";\nimport \"./DashboardHeader.css\"; // Import your stylesheet for styling if needed\n\nconst DashboardHeader = () => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]); // Assuming you have a notification state\n\n  const handleDropdownToggle = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  return (\n    <header className=\"dashboard-header\">\n      <div className=\"dashboard-left\">\n        <div className=\"dashboard-logo-container\">\n          <img src=\"logo192.png\" alt=\"Your Logo\" className=\"dashboard-logo\" />\n          <span>Security Solution</span>\n        </div>\n      </div>\n      <div className=\"dashboard-left\">\n        <div className=\"notification-icon\">\n          <RiNotification2Line size={24} />\n          {notifications.length > 0 && (\n            <div className=\"notification-badge\">{notifications.length}</div>\n          )}\n        </div>\n        <div className=\"dropdown\" onClick={handleDropdownToggle}>\n          <RiMenu4Line size={24} />\n          {isDropdownOpen && (\n            <div className=\"dropdown-content\">\n              {/* Dropdown menu content goes here */}\n              <Link to=\"/dashboard\">Dashboard</Link>\n              <Link to=\"/profile\">Profile</Link>\n              <Link to=\"/myappliedjobs\">My Applied Jobs</Link>\n              <Link to=\"/\">Logout</Link>\n              {/* Add more menu items as needed */}\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default DashboardHeader;\n","/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/JobDetailsCard.js",[],[],"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Profile.js",[],[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":24},{"ruleId":"73","severity":1,"message":"77","line":2,"column":26,"nodeType":"75","messageId":"76","endLine":2,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":32,"column":6,"nodeType":"81","endLine":32,"endColumn":8,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"83","line":9,"column":25,"nodeType":"75","messageId":"76","endLine":9,"endColumn":41},"no-new-object",["84"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Register' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dummyJobs'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'setNotifications' is assigned a value but never used.","no-object-constructor",{"desc":"86","fix":"87"},"Update the dependencies array to be: [dummyJobs]",{"range":"88","text":"89"},[1109,1111],"[dummyJobs]"]