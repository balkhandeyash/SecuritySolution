{"ast":null,"code":"var _jsxFileName = \"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const jobsPerPage = 15;\n  const jobListingRef = useRef(null);\n\n  // Dummy data for jobs (replace this with your actual job data)\n  const dummyJobs = Array.from({\n    length: 50\n  }, (_, index) => ({\n    id: index + 1,\n    title: `Job ${index + 1}`,\n    company: `Company ${index + 1}`,\n    location: `Location ${index + 1}`,\n    description: `Description for Job ${index + 1}. This is a sample job description.`\n  }));\n\n  // Calculate the index range for jobs on the current page\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  useEffect(() => {\n    // In a real-world scenario, fetch jobs from an API or a database\n    setJobs(dummyJobs);\n  }, []);\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handlePreviousPage = () => {\n    setCurrentPage(prevPage => prevPage - 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handleJobClick = jobId => {\n    setSelectedJob(jobId);\n\n    // Scroll the selected job card into view\n    const selectedJobElement = document.getElementById(`job-${jobId}`);\n    selectedJobElement && selectedJobElement.scrollIntoView({\n      behavior: \"smooth\"\n    });\n\n    // Center the selected job card in the viewport\n    window.scrollTo({\n      top: selectedJobElement.offsetTop - window.innerHeight / 2,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: jobListingRef,\n      className: `job-listing-container ${selectedJob ? \"zoomed\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-grid\",\n        children: currentJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `job-${job.id}`,\n          className: `job-card ${selectedJob === job.id ? \"selected\" : \"\"}`,\n          onClick: () => handleJobClick(job.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"job-description\",\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Page ${currentPage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: indexOfLastJob >= jobs.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/LyrxhGyzqpdXBYwDo/R543oBbM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Dashboard","_s","jobs","setJobs","currentPage","setCurrentPage","selectedJob","setSelectedJob","jobsPerPage","jobListingRef","dummyJobs","Array","from","length","_","index","id","title","company","location","description","indexOfLastJob","indexOfFirstJob","currentJobs","slice","handleNextPage","prevPage","handlePreviousPage","handleJobClick","jobId","selectedJobElement","document","getElementById","scrollIntoView","behavior","window","scrollTo","top","offsetTop","innerHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","job","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Dashboard.js"],"sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const jobsPerPage = 15;\n  const jobListingRef = useRef(null);\n\n  // Dummy data for jobs (replace this with your actual job data)\n  const dummyJobs = Array.from({ length: 50 }, (_, index) => ({\n    id: index + 1,\n    title: `Job ${index + 1}`,\n    company: `Company ${index + 1}`,\n    location: `Location ${index + 1}`,\n    description: `Description for Job ${\n      index + 1\n    }. This is a sample job description.`,\n  }));\n\n  // Calculate the index range for jobs on the current page\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n\n  useEffect(() => {\n    // In a real-world scenario, fetch jobs from an API or a database\n    setJobs(dummyJobs);\n  }, []);\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n    setSelectedJob(null); // Reset selected job when changing the page\n  };\n\n  const handleJobClick = (jobId) => {\n    setSelectedJob(jobId);\n\n    // Scroll the selected job card into view\n    const selectedJobElement = document.getElementById(`job-${jobId}`);\n    selectedJobElement && selectedJobElement.scrollIntoView({ behavior: \"smooth\" });\n\n    // Center the selected job card in the viewport\n    window.scrollTo({\n      top: selectedJobElement.offsetTop - window.innerHeight / 2,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"Dashboard-body\">\n      <h2>Job Listings</h2>\n      <div ref={jobListingRef} className={`job-listing-container ${selectedJob ? \"zoomed\" : \"\"}`}>\n        <div className=\"job-grid\">\n          {currentJobs.map((job) => (\n            <div\n              key={job.id}\n              id={`job-${job.id}`}\n              className={`job-card ${selectedJob === job.id ? \"selected\" : \"\"}`}\n              onClick={() => handleJobClick(job.id)}\n            >\n              <h3>{job.title}</h3>\n              <p>{job.company}</p>\n              <p>{job.location}</p>\n              <p className=\"job-description\">{job.description}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"pagination\">\n          <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n            Previous\n          </button>\n          <span>{`Page ${currentPage}`}</span>\n          <button\n            onClick={handleNextPage}\n            disabled={indexOfLastJob >= jobs.length}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}