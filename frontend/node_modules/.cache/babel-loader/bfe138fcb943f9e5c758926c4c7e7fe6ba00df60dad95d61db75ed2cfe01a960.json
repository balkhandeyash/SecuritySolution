{"ast":null,"code":"var _jsxFileName = \"/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Register.js\",\n  _s = $RefreshSig$();\n// Register.js\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Register.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [captchaValue, setCaptchaValue] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [otpSent, setOtpSent] = useState(false); // Track whether OTP has been sent\n  const navigate = useNavigate();\n  const handleSendOTP = async () => {\n    try {\n      // Check if email is provided\n      if (!email) {\n        alert(\"Please enter your email address.\");\n        return;\n      }\n\n      // Send OTP to the provided email\n      const response = await axios.post(\"http://127.0.0.1:5001/send-otp\", {\n        email\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        alert(\"OTP sent successfully. Check your email.\");\n        setOtpSent(true);\n      } else {\n        alert(\"Failed to send OTP. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n      alert(\"Error sending OTP. Please try again later.\");\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      // Validate email and OTP if OTP has been sent\n      if (otpSent && (!email || !otp)) {\n        alert(\"Please enter your email and OTP.\");\n        return;\n      }\n\n      // Perform registration logic with email, username, password, captcha, and OTP\n      const response = await axios.post(\"http://127.0.0.1:5001/register\", {\n        username,\n        password,\n        email,\n        captchaValue,\n        otp\n      });\n      console.log(\"Server Response:\", response);\n      if (response.status === 201) {\n        alert(\"Registration Successful\");\n        localStorage.setItem(\"token\", response.data.token);\n        navigate(\"/login\");\n      } else if (response.status === 400) {\n        alert(\"Registration failed: \" + response.data.error);\n      } else {\n        alert(\"Registration failed. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"1EPgzh4DiIXZx/6SVdySNLQl9uo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ReCAPTCHA","axios","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","email","setEmail","otp","setOtp","captchaValue","setCaptchaValue","showPassword","setShowPassword","otpSent","setOtpSent","navigate","handleSendOTP","alert","response","post","headers","status","error","console","handleRegister","e","preventDefault","log","localStorage","setItem","data","token","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yashbalkhande/pythonreactintegration/major-project copy 2/frontend/src/Register.js"],"sourcesContent":["// Register.js\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Register.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [captchaValue, setCaptchaValue] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [otpSent, setOtpSent] = useState(false); // Track whether OTP has been sent\n  const navigate = useNavigate();\n\n  const handleSendOTP = async () => {\n    try {\n      // Check if email is provided\n      if (!email) {\n        alert(\"Please enter your email address.\");\n        return;\n      }\n\n      // Send OTP to the provided email\n      const response = await axios.post(\n        \"http://127.0.0.1:5001/send-otp\",\n        { email },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        alert(\"OTP sent successfully. Check your email.\");\n        setOtpSent(true);\n      } else {\n        alert(\"Failed to send OTP. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n      alert(\"Error sending OTP. Please try again later.\");\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Validate email and OTP if OTP has been sent\n      if (otpSent && (!email || !otp)) {\n        alert(\"Please enter your email and OTP.\");\n        return;\n      }\n\n      // Perform registration logic with email, username, password, captcha, and OTP\n      const response = await axios.post(\"http://127.0.0.1:5001/register\", {\n        username,\n        password,\n        email,\n        captchaValue,\n        otp,\n      });\n\n      console.log(\"Server Response:\", response);\n\n      if (response.status === 201) {\n        alert(\"Registration Successful\");\n        localStorage.setItem(\"token\", response.data.token);\n        navigate(\"/login\");\n      } else if (response.status === 400) {\n        alert(\"Registration failed: \" + response.data.error);\n      } else {\n        alert(\"Registration failed. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}